spring.application.name=dining

# this is making h2 be in memory
spring.datasource.url=jdbc:h2:mem:testdb

spring.jpa.defer-datasource-initialization=true

# not sure what this does
spring.datasource.driverClassName=org.h2.Driver


spring.datasource.username=dinerboss
spring.datasource.password=password

# this setting basically is to control hibernate's database intialization.
# Spring boot by default chooses a default value by trying to see if whether ur database is embeded (create-drop) or not (none)
# none -> hibernate will not create, update, or validate the scema
# validate -> hibernate validates schema against the entity mappings, will not make changes but can throw exceptions
# update -> hib updates the schema to match entity mappings
# create -> hib creates the schema from scratch, dropping existing tables with same name
# create-dop -> creates schema when the application starts and drops it when application shuts down
spring.jpa.hibernate.ddl-auto=create


# idk what this one does
spring.sql.init.mode=always

# tells it where to find data scripts to perform insert and such 
spring.sql.init.data-locations=classpath:data.sql

# I guess this tells hibernate what SQL 'dialect' to generate, here h2
# It does not create or configure the database itself, just how hibernate talks to it
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true

server.error.include-message=always


